27/06/24
Inizio i lavori per la tesi di laurea triennale di Ingegneria e scienze informatiche
- creazione della repo
- consultazione esperienze e esempi di tesi triennali
- inizio studio dei concetti di visione artificiale applicati alla jvm 
- creazione progetto di test per la visione artificiale
- scoperta degli ArUco markers
- creazione applicazione java base che visualizza ciò che la webcam vede

fonti:
https://www.youtube.com/watch?v=iReJXUeLb20
https://docs.opencv.org/4.x/d5/dae/tutorial_aruco_detection.html
https://github.com/bytedeco/javacv

28/06/24
continuo sviluppo applicazione di test
- studio libreria specifica di visione artificiale per java Boofcv

29/06/24
continuo sviluppo applicazione di test
- test su opencv
- sviluppo prima app che riconosce qr code
- sviluppo prima app che riconosce aruco markers (non testata)

01/07/24
- test applicazione sviluppata in data 29/06 e successivi miglioramenti
- utilizzo di marker aruco stampati, dimensioni 4x4(50, 100, 250, 1000)
- studio pagina "Detection of aruco markers" di opencv
- studio concetto di posa della camera
- inizio calibrazione camera con aruco board

fonti:
https://chev.me/arucogen/
https://docs.opencv.org/4.x/da/d13/tutorial_aruco_calibration.html

02/07/24
- continuo calibrazione e posa camera
- download librerie opencv
- ho inserito le librerie di opencv all'interno della cartella bin del jdk
- tutto questo per poter utilizzare una classe completa per la calibrazione trovata su gituhub
- divisione funzioni in più classi
- pubblicazione prima release su github e modifica repo pubblica

fonti:
https://sourceforge.net/projects/opencvlibrary/files/4.5.3/

06/07/24
- continuo calibrazione e posa camera
- tentativo sostituzione libreria opencv453 con opencv9
- importazione nuova libreria per utilizzare versione differente di opencv
- grazie a chatgpt ho scoperto 
    
    static {
        // Carica le librerie native di OpenCV
        Loader.load(opencv_java.class);
    }

    con la quale sono riuscito a caricare senza problemi le librerie opencv

- mi sono bloccato sulla funzione calibrateCamera che non riesce a ottenere un'immagine

fonti:
https://www.baeldung.com/java-opencv

08/07/24
- continuo calibrazione e posa camera
- finito di implementare la calibrazione della camera
- inizio sviluppo posa camera

09/07/24
- continuo calibrazione e posa
- sono riuscito a sviluppare un primo sistema di posa ma non funziona benissimo

fonti: https://docs.opencv.org/4.x/d5/dae/tutorial_aruco_detection.html

10/07/24
- sto cercando di capire perchè la posa della camera non disegna
    gli assi in maniera corretta
- ho provato a calibrare la camera per più tempo ma non cambia niente
    allora sto provando a calibrarla con più di 4 marker e quindi 
    ho creato una classe con una funzione per generare pagine di marker
